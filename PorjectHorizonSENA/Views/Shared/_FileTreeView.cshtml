@model FileModel

<li>
    @if (!Model.IsRootProjects)
    {
        <span class="folder" onclick="toggleFolder(this)">
            @if (!string.IsNullOrEmpty(Model.UsuarioNombre) && !string.IsNullOrEmpty(Model.UsuarioApellido) && Model.IdUsuario > 0)
            {
                @if (!string.IsNullOrEmpty(Model.FotoPerfil))
                {
                    <img src="@Url.Content("~/images/" + Model.FotoPerfil)" alt="Foto de Perfil" class="user-photo rounded-circle me-2" style="width: 40px; height: 40px; object-fit: cover; border: 2px solid white;" />
                }
                else
                {
                    <div class="user-photo profile-picture-placeholder rounded-circle me-2" style="width: 40px; height: 40px; background-color: #CCCCCC; display: flex; justify-content: center; align-items: center;">
                        No Foto
                    </div>
                }
                <a href="@Url.Action("Perfil", "Perfil", new { id = Model.IdUsuario })" style="color: blue;">
                    <strong>@Model.UsuarioNombre @Model.UsuarioApellido</strong>
                </a>
                <br>
            }
            @if (!string.IsNullOrEmpty(Model.NombreProyecto))
            {
                <span>(Proyecto: @Model.NombreProyecto)</span>
                <br>
            }
            <strong>@Model.Name</strong>
        </span>
    }

    <ul style="display: @(Model.IsRootProjects ? "block" : "none")">
        @foreach (var child in Model.Children)
        {
            <li>
                @Html.Partial("_FileTreeView", child)
            </li>
        }
    </ul>
    @if (!Model.IsDirectory)
    {
        <span class="file">
            <a href="@Url.Action("Download", "File", new { filePath = Model.Path })" target="_blank">@Model.Name</a>
            <button type="button" onclick="viewFileContent('@Url.Action("ViewFileContent", "File", new { filePath = Model.RelativePath })')">View</button>
        </span>
    }
</li>

<script>
    function toggleFolder(element) {
        var ul = element.nextElementSibling;
        if (ul.style.display === "none") {
            ul.style.display = "block";
        } else {
            ul.style.display = "none";
        }
    }

    function viewFileContent(filePath) {
        fetch(filePath)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.text();
            })
            .then(data => {
                document.getElementById('fileContent').innerHTML = `
                                <h2>File Content</h2>
                                <pre>${data}</pre>
                            `;
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }
</script>
